---
title: "Take-home Exercise 01"
format:
  html:
    code-fold: true
    code-summary: "Show the code"

execute: 
  eval: true
  echo: true
  warning: false
date: "`r Sys.Date()`"
---

# **1. Introduction**

Apply appropriate spatial point patterns analysis methods to discover the geographical and spatio-temporal distribution of Grab hailing services locations in Singapore.

# **2. Data**

The following data sets will be used in the analysis

# **3. Install and load packages**

```{r}
pacman::p_load(sf, tmap, tidyverse, arrow, lubridate)
```

# **4. Data import**

## **Import GrabPosisi Data**

```{r}
df <- read_parquet("data/Apstial/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet")
```

## Importing Bus stops data

```{r}
bus_stop_sf <- st_read("data/Geospatial/BusStopLocation/BusStopLocation_Jul2023/BusStop.shp")
```

```{r}
bus_stop_sf <- st_transform(bus_stop_sf, crs = 3414)

st_crs(bus_stop_sf)
```

## Importing MRT stations data

```{r}
mrt_station_sf <- st_read("data/Geospatial/TrainStation/TrainStation_Feb2023/RapidTransitSystemStation.shp")
```

## Import Master Plan 2019 subzone Boundary (No Sea) Data

```{r}
mpsz_sf <- st_read("data/Geospatial/MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson")
```

## Import Road data

```{r}
sg_road <- st_read("data/Geospatial/malaysia-singapore-brunei-latest-free/gis_osm_roads_free_1.shp")
```

# **5. Data wrangling**

Pre-process and prepare data for analysis

## Assign 3414 EPSG code to bus_stop_sf

```{r}
bus_stop_sf <- st_set_crs(bus_stop_sf, 3414)
st_crs(bus_stop_sf)
```

## Assign 3414 EPSG code to mrt_staion_sf

```{r}
mrt_station_sf <- st_set_crs(mrt_station_sf, 3414)
st_crs(mrt_station_sf)
```

## Transfrom mpsz_sf from wgs84 to svy21

```{r}
mpsz_sf <- st_make_valid(mpsz_sf)
mpsz_sf <- st_transform(mpsz_sf, crs = 3414)
st_crs(mpsz_sf)
```

## transfrom sg_road from wgs84 to svy21

```{r}
sg_road <- st_transform(sg_road, crs = 3414)
st_crs(sg_road)
```

## convert data type of pingtimestamp from character to date-time

```{r}
df$pingtimestamp <- as_datetime(df$pingtimestamp)
```

## Grab taxi location points by origins.

```{r}
origin_df <- df %>%
  group_by(trj_id) %>%
  arrange(desc(pingtimestamp)) %>%
  filter(row_number()==1) %>%
  mutate(weekday = wday(pingtimestamp, label=TRUE, abbr=TRUE), 
         start_hr = factor(hour(pingtimestamp)), 
         day = factor(mday(pingtimestamp)))
```

## Grab taxi location points either by destinations.

```{r}
destination_df <- df %>%
  group_by(trj_id) %>%
  arrange(pingtimestamp) %>%
  filter(row_number()==1) %>%
  mutate(weekday = wday(pingtimestamp, label=TRUE, abbr=TRUE), 
         end_hr = factor(hour(pingtimestamp)), 
         day = factor(mday(pingtimestamp)))
```

## Mapping bus stop data sets

```{r}
tmap_mode("plot")
tm_shape(mpsz_sf)+tm_polygons()+tm_shape(bus_stop_sf)+tm_dots()

```

## Mapping mrt station data sets

