---
title: "Hands-on Exercise 1: Geospatial Data Wrangling with R"
execute: 
  warning: false
date: "`r Sys.Date()`"
---

# Getting Started

## Installing and loading R packages

In this section, I will install and load tidyverse and sf packages.

```{r}
pacman::p_load(tidyverse, sf)
```

# Importing a geospatial data in shapefile format (polygon feature)

```{r}
mpsz <- st_read(dsn = "data/geospatial", layer = "MP14_SUBZONE_WEB_PL")
```

# Importing a geospatial data in shapefile form (polyline)
```{r}
cyclingpath = st_read(dsn = "data/geospatial", layer = "CyclingPathGazette")
```
# Importing GIS data in KML format
```{r}
preschool = st_read("data/geospatial/PreSchoolsLocation.kml")

```

## Checking the Content of A Simple Feature Data Frame

# Working with st_geometry()
```{r}
st_geometry(mpsz)
```
# working with glimpse() (associated attribute information in the data frame)
```{r}
glimpse(mpsz)
```
# working with head()
```{r}
head(mpsz, n=5)
```

## Plotting the Geospatial Data

# default plot of sf object is a multi-plot of all attribute
```{r}
plot(mpsz)
```

# plot only the geometry
```{r}
plot(st_geometry(mpsz))
```
# plot by using specific attribute
```{r}
plot(mpsz["PLN_AREA_N"])
```

## Working with Projection

#Assigning EPSG code to a simple feature data frame
```{r}
st_crs(mpsz)

mpsz3414 <- st_set_crs(mpsz, 3414)

st_crs(mpsz3414)
```
# transforming wgs84 to svy21
```{r}
preschool3414 <- st_transform(preschool, crs = 3414)
```

## Importing and Converting An Asptial Data
#Importing the aspatial data
```{r}
listings <- read_csv("data/aspatial/listings.csv")

list(listings)
```
#Creating a simple feature data frame from an aspatial data frame
```{r}
listings_sf <- st_as_sf(listings, coords = c("longitude", "latitude"), crs=4326) %>% st_transform(crs = 3414)

glimpse(listings_sf)
```
## Geoprocessing with sf package
# Buffering

compute 5-meter buffers around cycling paths
```{r}
buffer_cycling <- st_buffer(cyclingpath, dist=5, nQuadSegs = 30)
```

calculate the area of buffers
```{r}
buffer_cycling$AREA <- st_area(buffer_cycling)
```

sum() of Base R will be used to derice the total land involved
```{r}
sum(buffer_cycling$AREA)
```

# Point-in-polygon count

identify pre-schools located inside each planning subzone using st_intersects() then length() of Base R is used to calculate numbers of pre-schools that fall inside each planning subzone
```{r}
mpsz3414$`PreSch Count`<- lengths(st_intersects(mpsz3414,preschool3414))
```
Checking of summary statistics of newly derived PreSCh Count field by using summary()
```{r}
summary(mpsz3414$`PreSch Count`)
```
list the planning subzone with the most number of pre-school
```{r}
top_n(mpsz3414, 1, `PreSch Count`)
```
Use st_area() of sf package to derive the area of each planning subzone
```{r}
mpsz3414$Area <- mpsz3414 %>% st_area()
```
mutate() of dplyr package is used to compute the density
```{r}
mpsz3414 <- mpsz3414 %>% mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)
```

## Exploratory Data Analysis (EDA)

Histogram to reveal the distribution of PreSch Density
```{r}
hist(mpsz3414$`PreSch Density`)
```

ggplost 2 function is used
```{r}
ggplot(data=mpsz3414, aes(x= as.numeric(`PreSch Density`)))+ geom_histogram(bins=20, color="black", fill="light blue") + labs(title = "Are pre-school even distributed in Singapore?", subtitle= "There are many planning sub-zones with a single pre-school, on the other hand, \nthere are two planning sub-zones with at least 20 pre-schools", x = "Pre-school density (per km sq)", y = "Frequency")
```
using ggplot 2 method, plot a scatterplot
```{r}
ggplot(data=mpsz3414, aes(y = `PreSch Count`, x= as.numeric(`PreSch Density`)))+ geom_point(color="black", fill="light blue") + xlim(0, 40) + ylim(0, 40) + labs(title = "", x = "Pre-school density (per km sq)", y = "Pre-school count")
```
