---
title: "In-class Exercise 3"
format:
  html:
    code-fold: true
    code-summary: "Show the code"

execute: 
  eval: true
  echo: true
  warning: false
date: "`r Sys.Date()`"
---

## Installing and loading R packages
```{r}
pacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse)
```

## Spatial Data Wrangling
# Importing the spatial Data
```{r}
childcare_sf <- st_read("data/ChildCareServices.geojson") %>% st_transform(crs=3414)

mpsz_sf <- st_read(dsn="data", layer="MP14_SUBZONE_WEB_PL")
```

# Creating coastal outline
```{r}
sg_sf <- mpsz_sf %>% st_union()
```
```{r}
plot(sg_sf)
```
## Geospatial Data Wragling
### Creating ppp object: sf_method
```{r}
childcare_ppp <- as.ppp(childcare_sf)
```
```{r}
summary(childcare_ppp)
```

### Handling Duplciate data

We can  check the duplication in a ***ppp*** object by using the code chuck below.

```{r}
any(duplicated(childcare_ppp))
```

```{r}
childcare_ppp_jit <- rjitter(childcare_ppp,retry=TRUE,nsim=1,drop=TRUE)
```
```{r}
any(duplicated(childcare_ppp_jit))
```

To count the number of co-indicence point, we will use the *multiplicity()* function

### Creating ***owin***  object: sf_method
```{r}
sg_owin <- as.owin(sg_sf)
```
```{r}
plot(sg_owin)
```

```{r}
pg <- mpsz_sf %>% filter(PLN_AREA_N == "PUNGGOL")
tm <- mpsz_sf %>% filter(PLN_AREA_N == "TAMPINES")
ck <- mpsz_sf %>% filter(PLN_AREA_N == "CHOA CHU KANG")
jw <- mpsz_sf %>% filter(PLN_AREA_N == "JURONG WEST")
```

```{r fig.width=16, fig.height=10}
par(mfrow=c(2,2))
plot(pg, main = "Ponggol")
plot(tm, main = "Tampines")
plot(ck, main = "Choa Chu Kang")
plot(jw, main = "Jurong West")
```

